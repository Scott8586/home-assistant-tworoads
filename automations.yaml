# UPS Shutdown
- alias: "UPS based shutdown"
  initial_state: 'off'
  trigger:
    platform: numeric_state
    entity_id: sensor.basement_ups_battery_runtime
    below: 600
  action:
    - service: notify.telegram_tworoads
      data:
        message: "Home Assistant UPS shutdown"
    - service: hassio.host_shutdown

- alias: Daily Backup at 4 AM
  trigger:
    platform: time
    at: '04:00:00'
  action:
  - service: hassio.addon_start
    data:
      addon: 0844df1a_remote_backup
  - service: notify.telegram_tworoads
    data:
      message: "Home Assistant backed up"

# Daily/Periodic temperature report
- alias: 'Daily report of outside temp at 5am'
  trigger:
    platform: time
    at: '05:30:00'
  action:
    service: notify.telegram_tworoads # or telegram_bot.send_message
    data_template:
      message: "Outside Temperature {{ states('sensor.weewx_outside_temperature') }}F"

# zone change
- id: 'zonechange'
  alias: 'enter named zone'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.scotts_iphone, device_tracker.stephs_iphone, device_tracker.stephs_apple_watch, device_tracker.scotts_iphone_bt, device_tracker.stephs_iphone_bt, device_tracker.scotts_g645_bt, device_tracker.stephs_apwa_bt, device_tracker.explorer_bt, device_tracker.audi_bt, device_tracker.rav4_bt
    from: 'not_home'
  action:     
    service: notify.telegram_tworoads
    data_template:
      message: "z: {{ trigger.to_state.name }} appears {{ trigger.to_state.state }}"

# zone change
- id: 'awaychange'
  alias: leave named zone
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.scotts_iphone, device_tracker.stephs_iphone, device_tracker.stephs_apple_watch, device_tracker.scotts_iphone_bt, device_tracker.stephs_iphone_bt, device_tracker.scotts_g645_bt, device_tracker.stephs_apwa_bt, device_tracker.explorer_bt, device_tracker.audi_bt, device_tracker.rav4_bt
    to: 'not_home'
  action:     
    service: notify.telegram_tworoads
    data_template:
      message: "z: {{ trigger.to_state.name }} appears Away"

# Home sensor:
- id: 'homesensor'
  alias: Home Presense
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.scott_presence, binary_sensor.steph_presence
    from: 'off'
  action:
    service: notify.telegram_tworoads
    data_template:
      message: "B: {{ trigger.to_state.name }} is Home"

# Away sensor:
- id: 'awaysensor'
  alias: Away Presense
  trigger:
    platform: state
    entity_id: binary_sensor.scott_presence, binary_sensor.steph_presence
    to: 'off'
  action:
    service: notify.telegram_tworoads
    data_template:
      message: "B: {{ trigger.to_state.name }} is Away"

# Person State:
- id: 'personstate'
  alias: Scott Person State
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: person.scott, person.stephanie
    from: 'not_home'
  action:
    service: notify.telegram_tworoads
    data_template:
      message: "P: {{ trigger.to_state.name }} is {{ trigger.to_state.state }}"

# Binary Both Home
- id: 'bothathome'
  alias: Both Home
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.both_home
    to: 'on'
  action:
    service: notify.telegram_tworoads
    data:
      message: "B: Both Scott and Stephanie are home."

- id: 'republishScottsPhone'
  alias: ios_to_mqtt
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.scott_s_iphone
  action:
    - service: mqtt.publish
      data_template:
        topic: 'location/phone/srp_iphone_ios'
        retain: false
        payload:
                '
                    {"battery_level":{{ states.device_tracker.scott_s_iphone.attributes.battery_level }},
                    "longitude":{{ states.device_tracker.scott_s_iphone.attributes.longitude }},
                    "gps_accuracy":{{ states.device_tracker.scott_s_iphone.attributes.gps_accuracy }},
                    "latitude":{{ states.device_tracker.scott_s_iphone.attributes.latitude }},
                    "tst": {{ as_timestamp(now()) | int }},
                    "_type":"location",
                    "tid":"sc"}
                '
    # - service: notify.telegram_tworoads
    #   data:
    #     message: "Send location..."

# Start actions
- id: 'startactions'
  alias: 'Start Actions'
  trigger:
    event: start
    platform: homeassistant
  condition: []
  action:
    # Send a telegram 
    - service: notify.telegram_tworoads
      data:
        message: "Home Assistant (re)started"
    - delay: 00:00:05
    # Restart the monitor services
    - service: mqtt.publish
      data:
        topic: "monitor/scan/restart"
        payload: ""

# Test message      
- id: 'testmessage'
  alias: "Telegram Test command"
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/ping'
  action:
    service: notify.telegram_tworoads
    data:
      message: "pong"

# Reload message      
- id: 'reloadmessage'
  alias: "Home Assistant Reload command"
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/reload'
  action:
    - service: notify.telegram_tworoads
      data:
        message: "Reloading..."
    - service: frontend.reload_themes
      
# Restart message      
- id: 'restartmessage'
  alias: "Home Assistant Restart command"
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/restart'
  action:
    - service: notify.telegram_tworoads
      data:
        message: "Restarting..."
    - service: homeassistant.restart
    
# Reboot message      
- id: 'rebootmessage'
  alias: "Home Assistant Reboot command"
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/reboot'
  action:
    - service: notify.telegram_tworoads
      data:
        message: "Rebooting..."
    - service: hassio.host_reboot
      
# Test message      
- id: 'testiosmessage'
  alias: "iOS Test command"
  trigger:
    platform: event
    event_type: telegram_command
    event_data:
      command: '/check'
  action:
    service: notify.mobile_app_scott_s_iphone
    data:
      message: "I can't hear you!"
      
- id: "sunset"
  alias: 'Sunset Message'
  trigger:
    platform: sun
    event: sunset
  action:
    service: notify.mobile_app_scott_s_iphone
    data:
      message: 'Sunset {{ now().strftime("%H:%M") }}'

# - id: 'autothemechange'
#   alias: Automatic Theme Change
#   trigger:
#     - platform: homeassistant
#       event: start
#     - platform: state
#       entity_id: sun.sun
#   action:
#     - service_template: frontend.set_theme
#       data_template:
#         name: >
#           {% if states.sun.sun.state == "above_horizon" %}
#             teal
#           {% else %}
#             dark_blue
#           {% endif %}
